name: Code quality - CDK constructor

# PROCESS
#
# 1. Install all dependencies and spin off containers for all supported Python versions
# 2. Run code formatters and linters (various checks) for code standard
# 3. Run static typing checker for potential bugs
# 4. Run tests

# USAGE
#
# Always triggered on new PRs, PR changes and PR merge.


on:
  pull_request:
    paths:
      - "layer_v3/layer_constructors/**"
    branches:
      - develop
  push:
    paths:
        - "layer_v3/layer_constructors/**"
    branches:
      - develop

permissions:
  contents: read

jobs:
  quality_check_cdk:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12"]
    env:
      PYTHON: "${{ matrix.python-version }}"
    permissions:
      contents: read  # checkout code only
    defaults:
      run:
        working-directory: ./layer_v3/layer_constructors
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@5964de0df58d5ad28b04d8fe2e6b80ad47105b91 # v2.0.0
        with:
          platforms: arm64
        # NOTE: we need QEMU to build Layer against a different architecture (e.g., ARM)
      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
        with:
          install: true
          driver: docker
          platforms: linux/amd64,linux/arm64
      - name: Install dependencies
        run: |
            pip install --upgrade pip pre-commit poetry
            poetry install
      - name: Test with pytest
        run: poetry run pytest tests
